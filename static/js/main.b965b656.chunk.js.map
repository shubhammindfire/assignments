{"version":3,"sources":["components/Search.js","components/GithubSearch.js","App.js","reportWebVitals.js","index.js"],"names":["Search","useState","user","changeUser","login","updateLogin","style","fontSize","action","onSubmit","event","userInfo","document","getElementById","errorText","console","log","innerHTML","test","axios","get","then","res","data","name","html","avatar_url","html_url","bio","location","public_repos","followers","following","addHTML","catch","error","response","status","preventDefault","id","placeholder","value","onChange","ev","target","type","autoFocus","marginLeft","GithubSearch","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wPAuGeA,MApGf,WAAkB,MAGaC,mBAAS,IAHtB,mBAGPC,EAHO,KAGDC,EAHC,OAIeF,mBAAS,IAJxB,mBAIPG,EAJO,KAIAC,EAJA,KAsFd,OACI,qBAAKC,MAAO,CAAEC,SAAU,QAAxB,SACI,uBAAMC,OAAO,IAAIC,SAnDzB,SAAsBC,GAClB,IAAIC,EAAWC,SAASC,eAAe,aACnCC,EAAYF,SAASC,eAAe,cAGxC,GADAE,QAAQC,IAAR,iBAAsBd,IACT,KAATA,GAAwB,OAATA,EACfa,QAAQC,IAAR,6BAAkCd,IAClCY,EAAUG,UAAV,kFAIAN,EAASM,UAAY,QAEpB,GAAIb,IAAUF,EAAM,CAErBa,QAAQC,IAAI,+BAAiCd,GAE/B,2CACHgB,KAAKhB,GAUZiB,IAAMC,IAAN,uCAA0ClB,IACrCmB,MAAK,SAACC,GACHP,QAAQC,IAAIM,EAAIC,MAEhBlB,EAAYiB,EAAIC,KAAKnB,OACrBO,EAASM,UAhE7B,SAAiBK,GAEbP,QAAQC,IAAR,gBAAqBM,EAArB,YAA4BA,EAAIC,KAAKnB,MAArC,YAA8CkB,EAAIC,KAAKC,OACvD,IAAIC,EAAO,GAyBX,OAxBIH,EAAIC,KAAKG,aACTD,GAAI,qGAAkGH,EAAIC,KAAKG,WAA3G,cAERD,GAAI,0DAAuDH,EAAIC,KAAKI,SAAhE,YAA4EL,EAAIC,KAAKnB,MAArF,cAEAkB,EAAIC,KAAKC,OACTC,GAAI,qBAAkBH,EAAIC,KAAKC,KAA3B,WACJF,EAAIC,KAAKK,MACTH,GAAI,oBAAiBH,EAAIC,KAAKK,IAA1B,WACJN,EAAIC,KAAKM,WACTJ,GAAI,yBAAsBH,EAAIC,KAAKM,SAA/B,WACJP,EAAIC,KAAKO,eACTL,GAAI,6BAA0BH,EAAIC,KAAKO,aAAnC,WACJR,EAAIC,KAAKQ,YACkB,IAAvBT,EAAIC,KAAKQ,UACTN,GAAI,QAEJA,GAAI,0BAAuBH,EAAIC,KAAKQ,WACpCT,EAAIC,KAAKS,WAAoC,IAAvBV,EAAIC,KAAKS,UAC/BP,GAAI,sBAAmBH,EAAIC,KAAKS,UAA5B,UAEJP,GAAI,UAGLA,EAoC8BQ,CAAQX,MAEhCY,OAAM,SAACC,GACJpB,QAAQC,IAAR,UAAemB,EAAMC,SAASC,OAA9B,qBAAiDF,IAEnB,MAA1BA,EAAMC,SAASC,SACf1B,EAASM,UAAT,4JAnBZH,EAAUG,UAAV,6FAIAN,EAASM,UAAY,IAsB7BP,EAAM4B,kBAKF,UACA,uBAAOC,GAAG,aAAaC,YAAY,+BAA+BC,MAAOvC,EAAMwC,SAAU,SAACC,GAAS/B,SAASC,eAAe,cAAcI,UAAY,GAAId,EAAWwC,EAAGC,OAAOH,QAAWI,KAAK,OAAOC,WAAS,IAC9M,wBAAQxC,MAAO,CAAEyC,WAAY,QAA7B,oBAEA,qBAAKR,GAAG,eAER,qBAAKA,GAAG,oBCpFLS,MAVf,WACI,OACI,gCACI,+CACA,2DACA,cAAC,EAAD,QCGGC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASC,eAAe,SAM1BsC,M","file":"static/js/main.b965b656.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\n\nfunction Search() {\n    // https://api.github.com/users/\n\n    const [user, changeUser] = useState('');\n    const [login, updateLogin] = useState('');\n\n    function addHTML(res) {\n        // bio followers following location\n        console.log(`res = ${res} ${res.data.login} ${res.data.name}`);\n        let html = '';\n        if (res.data.avatar_url)\n            html += `<div style=\"margin-top:20px;\"><img style=\"border-radius:50%;width:150px;height:150px;\" src=${res.data.avatar_url} /></div>`;\n\n        html += `<div style=\"margin-top:20px;\">Username: <a href=${res.data.html_url}>${res.data.login}</a></div>`;\n\n        if (res.data.name)\n            html += `<div>Name: ${res.data.name}</div>`;\n        if (res.data.bio)\n            html += `<div>Bio: ${res.data.bio}</div>`;\n        if (res.data.location)\n            html += `<div>Location: ${res.data.location}</div>`;\n        if (res.data.public_repos)\n            html += `<div>Public Repos: ${res.data.public_repos}</div>`;\n        if (res.data.followers) {\n            if (res.data.followers === 0)\n                html += `<div>`;\n            else\n                html += `<div>Followers: ${res.data.followers}`;\n            if (res.data.following && res.data.following !== 0)\n                html += ` Following: ${res.data.following}</div>`;\n            else\n                html += `</div>`\n        }\n\n        return html;\n    }\n\n    function handleSearch(event) {\n        let userInfo = document.getElementById('user-info');\n        let errorText = document.getElementById('error-text');\n\n        console.log(`user = ${user}`);\n        if (user === '' || user === null) {\n            console.log(`Empty user. user = ${user}`);\n            errorText.innerHTML = `\n            <div style=\"color: red;\">Input field is empty</div>\n            `;\n            // removing the previous user results\n            userInfo.innerHTML = '';\n        }\n        else if (login !== user) {\n            // if login !== user only then a new API call is made\n            console.log('Clicked on search with user=' + user);\n\n            const regex = /^[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){0,38}$/i;\n            if (!regex.test(user)) {\n                // adding error messages if the username pattern isn't satisfied\n                errorText.innerHTML = `\n            <div style=\"color: red;\">Please enter a correct username</div>\n            `;\n                // removing the previous user results\n                userInfo.innerHTML = '';\n            }\n            else {\n                // using axios for API calls\n                axios.get(`https://api.github.com/users/${user}`)\n                    .then((res) => {\n                        console.log(res.data);\n                        // updating the login state\n                        updateLogin(res.data.login);\n                        userInfo.innerHTML = addHTML(res);\n                    })\n                    .catch((error) => {\n                        console.log(`${error.response.status} error is ${error}`);\n                        // 404 means user not found for the particular username\n                        if (error.response.status === 404) {\n                            userInfo.innerHTML = `\n                            <div style=\"margin-top:20px;\">Sorry, there seems to be no user with this username</div> \n                            `;\n                        }\n                    });\n            }\n        }\n        event.preventDefault();\n    }\n\n    return (\n        <div style={{ fontSize: \"20px\" }}>\n            <form action=\"#\" onSubmit={handleSearch}>\n            <input id='text-field' placeholder=\"Enter a username to search..\" value={user} onChange={(ev) => { document.getElementById('error-text').innerHTML = ''; changeUser(ev.target.value); }} type='text' autoFocus />\n            <button style={{ marginLeft: \"20px\" }}>Search</button>\n            {/*used to display error texts, if any*/}\n            <div id='error-text'></div>\n            {/*used to display user info, if available*/}\n            <div id='user-info'></div>\n            </form>\n        </div>\n    );\n}\n\nexport default Search;","import React from \"react\";\nimport Search from \"./../components/Search.js\";\n\nfunction GithubSearch() {\n    return (\n        <div>\n            <h2>Github Search</h2>\n            <p>Search users across Github</p>\n            <Search />\n        </div>\n    );\n}\n\nexport default GithubSearch;","import './App.css';\nimport GithubSearch from './components/GithubSearch.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GithubSearch />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}